/*drop table if exists users, groups, students, assessments, assessments_lists, work_experiences, teachers_educations,
    teachers_experiences, positions, chairs, groups_students, educations, teachers, schedule;*/




CREATE TABLE IF NOT EXISTS users ( --STORE USERS AT WEBSITE
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR (255) NOT NULL, --MUST HAVE SHA256
    role VARCHAR(255) NOT NULL, -- "ADMIN", "STUDENT", "TEACHER"
    CONSTRAINT user_const CHECK (login <> '' AND password <> '' )
);

--START OF BLUE ONES--
CREATE TABLE IF NOT EXISTS groups (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    course INTEGER NOT NULL,
    education_direction VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS students (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    last_name VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    patronymic VARCHAR(255), --CAN BE NULL CAUSE THERE MIGHT BE NO PATRONYMIC OUTSIDE CIS
    phone_number INTEGER NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS groups_students (
    student_id INTEGER REFERENCES students(id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES groups(id) ON DELETE CASCADE,
    PRIMARY KEY(student_id, group_id)
);

CREATE TABLE IF NOT EXISTS subjects (
    subject_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    subject_coefficient DOUBLE NOT NULL
);

CREATE TABLE IF NOT EXISTS assessments (
    assessment_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subject_id INTEGER NOT NULL REFERENCES subjects(subject_id) ON DELETE CASCADE ON UPDATE CASCADE,
    mark INTEGER NOT NULL,
    type VARCHAR(255) NOT NULL, --CAN BE "M" FOR МОДУЛЬ, "E" FOR EXAM, "Z" FOR ЗАЧЕТ, "C" FOR COURSE WORK
    received DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS assessments_lists (
    student_id INTEGER REFERENCES students(id) ON DELETE CASCADE,
    assessment_id INTEGER REFERENCES assessments(assessment_id) ON DELETE CASCADE,
    PRIMARY KEY(student_id, assessment_id)
);
--END OF BLUE ONES--


--START OF GREEN ONES--
CREATE TABLE IF NOT EXISTS work_experiences (
    work_experience_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    company_name VARCHAR(255) NOT NULL,
    position_name VARCHAR(255) NOT NULL,
    date_start DATE NOT NULL,
    date_end DATE NOT NULL,
    responsibilities VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS positions ( --WILL BE INSERTED BY DEFAULT IN data.sql FILE
    position_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    responsibilities VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS chairs ( --WILL BE INSERTED BY DEFAULT IN data.sql FILE
    chair_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    head_last_name VARCHAR(255) NOT NULL,
    head_first_name VARCHAR(255) NOT NULL,
    head_patronymic VARCHAR(255),
    chair_phone_number INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS educations (
    education_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type VARCHAR(255) NOT NULL, --"M" FOR Магистратура, "B" FOR Бакалавриат, "А" FOR Аспирантура
    specialization VARCHAR(255) NOT NULL,
    university_name VARCHAR(255) NOT NULL,
    date_end DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS teachers (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    chair_id INTEGER REFERENCES chairs(chair_id) ON DELETE CASCADE ON UPDATE CASCADE,
    position_id INTEGER REFERENCES positions(position_id) ON DELETE CASCADE ON UPDATE CASCADE,
    last_name VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    patronymic VARCHAR(255), --CAN BE NULL CAUSE THERE MIGHT BE NO PATRONYMIC OUTSIDE CIS
    phone_number INTEGER NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS teachers_experiences (
    teacher_id INTEGER REFERENCES teachers(id) ON DELETE CASCADE,
    work_experience_id INTEGER REFERENCES work_experiences(work_experience_id) ON DELETE CASCADE,
    PRIMARY KEY(teacher_id, work_experience_id)
);

CREATE TABLE IF NOT EXISTS teachers_educations (
        teacher_id INTEGER REFERENCES teachers(id) ON DELETE CASCADE,
        education_id INTEGER REFERENCES educations(education_id) ON DELETE CASCADE,
        PRIMARY KEY(teacher_id, education_id)
);
--END OF GREEN ONES


--START OF PURPLE ONES--
CREATE TABLE IF NOT EXISTS schedule ( --WILL BE INSERTED BY DEFAULT
    schedule_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    teacher_id INTEGER REFERENCES teachers(id) ON DELETE CASCADE ON UPDATE CASCADE,
    group_id iNTEGER REFERENCES groups(id) ON DELETE CASCADE ON UPDATE CASCADE,
    subject_id INTEGER REFERENCES subjects(subject_id) ON DELETE CASCADE ON UPDATE CASCADE,
    date_of_conduct DATE NOT NULL,
    class_room INTEGER NOT NULL
);
--END OF PURPLE ONES--